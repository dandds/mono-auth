# APP.ATAT.CODES
server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    server_name app.atat.codes;
    ssl_certificate /app/ssl/server-certs/app.atat.codes.crt;
    ssl_certificate_key /app/ssl/server-certs/app.atat.codes.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_prefer_server_ciphers on;

    add_header Strict-Transport-Security max-age=15768000;

    location / {
      try_files $uri @app;
    }

    location /cac-login {
      return 301 https://dev.cac.atat.codes$request_uri;
    }

    location @app {
      include uwsgi_params;
      uwsgi_pass unix:///tmp/uwsgi.sock;
    }
}

# DEV.CAC.ATAT.CODES
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name dev.cac.atat.codes;
    ssl_certificate /app/ssl/server-certs/dev.cac.atat.codes.crt;
    ssl_certificate_key /app/ssl/server-certs/dev.cac.atat.codes.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_prefer_server_ciphers on;

    ssl_verify_client optional;
    ssl_verify_depth 10;
    ssl_client_certificate /app/ssl/server-certs/ca-chain.pem;
    error_log /var/log/nginx/cac.error.log debug;

    add_header Strict-Transport-Security max-age=15768000;

    location / {
      return 301 https://app.atat.codes$request_uri;
    }

    location /cac-login {
      try_files $uri @app;
    }

    location @app {
      include uwsgi_params;
      uwsgi_pass unix:///tmp/uwsgi.sock;
      uwsgi_param HTTP_X_SSL_CLIENT_VERIFY $ssl_client_verify;
      uwsgi_param HTTP_X_SSL_CLIENT_CERT $ssl_client_raw_cert;
      uwsgi_param HTTP_X_SSL_CLIENT_S_DN $ssl_client_s_dn;
    }
}
